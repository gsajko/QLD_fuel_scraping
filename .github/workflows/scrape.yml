name: scrape

on:
  schedule:
    - cron:  '5 11 * * *' # Each day At 11:05 Ref https://crontab.guru/examples.html
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python     
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      #----------------------------------------------
      #  -----  install & configure poetry  -----      
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.6
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #       load cached venv if cache exists      
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist 
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --no-dev
      #----------------------------------------------
      # run scrape
      #----------------------------------------------       
      - name: Scrape
        env: 
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          source .venv/bin/activate
          poetry run python -c 'import os;print(os.environ)'
          poetry run python daily_scrape.py
          poetry run python monthly_scrape.py

      #----------------------------------------------
      # publish to github
      #----------------------------------------------

      - uses: mikeal/publish-to-github-action@master
        env:
          BRANCH_NAME: 'master'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
